{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\GitHub\\\\1React-PerfumeShop-v4.0.0\\\\client\\\\src\\\\screens\\\\UserEditScreen.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserEditScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const params = useParams();\n  const userId = params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      navigate('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, navigate, userId, user, successUpdate]);\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(UserEditScreen, \"sLUEb1NRy5RUMCE0DselR/EdpRM=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector, useSelector];\n});\n_c = UserEditScreen;\nexport default UserEditScreen;\nvar _c;\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["useState","useEffect","Link","useParams","useNavigate","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","navigate","params","userId","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","_id","submitHandler","e","preventDefault","target","value","checked"],"sources":["C:/Users/Alex/Documents/GitHub/1React-PerfumeShop-v4.0.0/client/src/screens/UserEditScreen.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\nconst UserEditScreen = () => {\n const navigate = useNavigate();\n const params = useParams();\n const userId = params.id;\n\n const [name, setName] = useState('');\n const [email, setEmail] = useState('');\n const [isAdmin, setIsAdmin] = useState(false);\n\n const dispatch = useDispatch();\n\n const userDetails = useSelector((state) => state.userDetails);\n const { loading, error, user } = userDetails;\n\n const userUpdate = useSelector((state) => state.userUpdate);\n const {\n  loading: loadingUpdate,\n  error: errorUpdate,\n  success: successUpdate,\n } = userUpdate;\n\n useEffect(() => {\n  if (successUpdate) {\n   dispatch({ type: USER_UPDATE_RESET });\n   navigate('/admin/userlist');\n  } else {\n   if (!user.name || user._id !== userId) {\n    dispatch(getUserDetails(userId));\n   } else {\n    setName(user.name);\n    setEmail(user.email);\n    setIsAdmin(user.isAdmin);\n   }\n  }\n }, [dispatch, navigate, userId, user, successUpdate]);\n\n const submitHandler = (e) => {\n  e.preventDefault();\n  dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n };\n\n return (\n  <>\n   <Link to='/admin/userlist' className='btn btn-light my-3'>\n    Go Back\n   </Link>\n   <FormContainer>\n    <h1>Edit User</h1>\n    {loadingUpdate && <Loader />}\n    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n    {loading ? (\n     <Loader />\n    ) : error ? (\n     <Message variant='danger'>{error}</Message>\n    ) : (\n     <Form onSubmit={submitHandler}>\n      <Form.Group controlId='name'>\n       <Form.Label>Name</Form.Label>\n       <Form.Control\n        type='name'\n        placeholder='Enter name'\n        value={name}\n        onChange={(e) => setName(e.target.value)}></Form.Control>\n      </Form.Group>\n\n      <Form.Group controlId='email'>\n       <Form.Label>Email Address</Form.Label>\n       <Form.Control\n        type='email'\n        placeholder='Enter email'\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}></Form.Control>\n      </Form.Group>\n\n      <Form.Group controlId='isadmin'>\n       <Form.Check\n        type='checkbox'\n        label='Is Admin'\n        checked={isAdmin}\n        onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\n      </Form.Group>\n\n      <Button type='submit' variant='primary'>\n       Update\n      </Button>\n     </Form>\n    )}\n   </FormContainer>\n  </>\n );\n};\n\nexport default UserEditScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}